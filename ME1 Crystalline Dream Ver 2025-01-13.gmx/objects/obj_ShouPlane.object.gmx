<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ShouPlane</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_ParDanmaku</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Basic variables
event_inherited()

//Destroy conditions
//[Resistences]
BombResistence = true //does Bombs effect the bullet?
OffScreenKill = false //Destroys the bullet when its oiff the screen

//[Kill variables]
Kill = false //setting true will Kill the bullet

//[Give Score When killed]
ScoreEnabled = false
Preened = false
PreenRad = abs(bbox_right - bbox_left) / 2 + 8

//Sprite variables
//[General]
image_alpha = 1
image_angle = direction - 90
Created = false
image_speed = 1
image_xscale = 0.8
image_yscale = 0.8
Boundry = 50
Deadly = true
ScoreGiven = false
KillSound = true
Laser = false

//[Animation]

//[Direction]
PointInDirection = true
StartDirection = 0

//Effects
//[Enabled]
CreateEffect = true
DeathEffect = true

//[Effect variables (Create Effect)]
CreateEffectRot = random(360)
CreateX = x
CreateY = y
CreateScale = 1
EffectRot = 0

//-=Colour Key=-
/* 
0, 0 = Red  R: 251 G: 0 B: 0
1, 4 = Orange R: 251 G: 126 B: 0
2, 8 = Yellow R: 251 G: 251 B: 0
3, 12 = yelleen R: 0 G: 251 B: 0
4, 16 = Green R: 0 G: 251 B: 0
5, 20 = gran R: 0 G: 251 B: 0
6, 24 = Cyan R: 0 G: 251 B: 251
7, 28 = Lt Blue R: 50 G: 50 B: 251
8, 32 = Blue R: 0 G: 0 B: 251
9, 36 = Purple R: 200 G: 0 B: 200
10, 40 = Magenta R: 251 G: 0 B: 251
11, 44 = Velvet R: 251 G: 0 B: 251
12, 48 = White R: 251 G: 251 B: 251
13, 52 = Black R: 251 G: 251 B: 251
*/






</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Properties
PreFlight = false //pre fligth Warning
direction = 0 //Plane's flying angle 
MaxPFTimer = 30 //Maximum time for warnings
PreFlightTimer = 0 //Warnign Clock
Phase = 0 //Projectile Phase

KillTimer = 0

FlightAngle = 0

//front guns
FGFireRate = 0
FGFireAmount = 0

//Ring Shot
RingSpin = ceil(random(360))
RingFR = 0
ranFactor = floor(random_range(0, 10))

ATKPause = false

if global.Diff = "Easy"
{ 
    DiffRingFR = 10
    DiffRingSpin = 5 
    BulAmount = 5
    gunFireadjust = 0
}

if global.Diff = "Normal"
{ 
   DiffRingFR = 8
   DiffRingSpin = 4.5 
   BulAmount = 5
   gunFireadjust = 0
} 

if global.Diff = "Hard"
{ 
   DiffRingFR = 8 
   DiffRingSpin = 4.5
   BulAmount = 6
   gunFireadjust = 0
}

if global.Diff = "Flightless"
{ 
   DiffRingFR = 8 
   DiffRingSpin = 4.5
   BulAmount = 6 
   gunFireadjust = 0
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///To stop inherited
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Properties
//Killers

//Events
direction = FlightAngle-180


if PreFlight = false //pre flight Warning 
{
    //Events
    Warn = instance_create(x, y, obj_WarningSpawner)
    Warn.direction = direction
    
    PreFlight = true;
}
else
{
    if KillTimer &lt; 180
    {
        KillTimer += 1
    }
    else
    {
        instance_destroy()
    }
}

//Clock
if PreFlightTimer &lt; MaxPFTimer
{
    PreFlightTimer += 1;
}
else
{
    if FGFireAmount &lt; 5
    {
        FGFireRate += 1;
        FGFireRate = FGFireRate % 5;
        if FGFireRate = 1
        {
            Play_Sound_Fancy(snd_SFX_BulletFired,global.VolSFX)
            
            Bul = instance_create(x+lengthdir_x(30, direction+90), y+lengthdir_y(30, direction+90), obj_SpellPlaneShot1);
            Bul.speed = 10;
            Bul.direction = direction-gunFireadjust;
                
            Bul = instance_create(x+lengthdir_x(30, direction-90), y+lengthdir_y(30, direction-90), obj_SpellPlaneShot1);
            Bul.speed = 10;
            Bul.direction = direction+gunFireadjust;
            
            //Fired Bullet
            FGFireAmount += 1
        }
    }
    else
    {
        //Global Variables
        if speed &lt; 15
        {
            speed += 15/30
        }
        
        //Phased Variables
        if Phase = 0
        {
            RingFR += 1
            RingFR = RingFR % DiffRingFR //+ ranFactor
            
            if RingFR = 1
            {
                Pack = instance_create(x+random_range(-10,10), y+random_range(-10,10), obj_Spell3Package)
                Pack.speed = 0.2
                Pack.direction = RingSpin
                Pack.Fuse = 60
                ranFactor = floor(random_range(0, 10))
            }
            RingSpin += DiffRingSpin
            RingSpin = RingSpin % 360
        }
        
        if Phase = 1
        {
            if RingFR = 0
            {
                if x &gt; 512-10 and x &lt; 512+10
                {
                    Glaive = instance_create(x, y, obj_Spell3AttackGlaive)
                    Glaive.direction = direction -20
                    Glaive.speed = 5
                    RingFR += 1
                }
            }
        }
        
        if Phase = 2 and ATKPause = false
        {
            RingFR += 1
            RingFR = RingFR % DiffRingFR //+ ranFactor
            
            if RingFR = 1
            {
                Pack = instance_create(x+random_range(-10,10), y+random_range(-10,10), obj_Spell3Package)
                Pack.speed = 0.2
                Pack.direction = RingSpin
                Pack.Fuse = 120
                ranFactor = floor(random_range(0, 10))
            }
            RingSpin += DiffRingSpin
            RingSpin = RingSpin % 360
        }
        
        if Phase = 3
        {
            with (obj_Spell3AttackGlaive)
            {
                KillBounce = true
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///basic stuff (to prevent inherited)
draw_self()

image_angle = direction - 90

image_alpha = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
