<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ScoreBonus = 0
TextAlpha = 0
BonusAlpha = 0
Phase = 0 
Timer = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>TextCol = make_colour_hsv(200, 200, 200)
PlayScore = string_repeat("0", 9 - string_length(ScoreBonus)) + string(ScoreBonus)
for (var i = string_length(PlayScore) - 2; i &gt; 1; i -= 3)
{
    PlayScore = string_insert(",", PlayScore, i);
}
        
draw_set_halign(fa_middle)
draw_set_valign(fa_middle)                     
draw_text_outline_coloured(x, y, 'Stage Completed!', TextCol, TextCol, c_white, c_white, c_black, 1, ft_NewStage, TextAlpha)
draw_text_outline_coloured(x, y+50, string(PlayScore), TextCol, TextCol, c_white, c_white, c_black, 1, ft_NewStageSM, BonusAlpha)
draw_set_halign(fa_left)
draw_set_valign(fa_top) 

if Phase = 0
{
    if TextAlpha &lt; 1
    {
        TextAlpha += 1/30
    }
    else
    {
        if Timer &lt; 30
        {
            Timer ++
        }
        else
        {
            Timer = 0
            Phase = 1
        }
    }
    
}

if Phase = 1
{
    if BonusAlpha &lt; 1
    {
        BonusAlpha += 1/30
    }
    else
    {
        if Timer &lt; 80
        {
            Timer ++
        }
        else
        {
            Timer = 0
            Phase = 2
        }
    }
    
}

if Phase = 2
{
    if BonusAlpha &gt; 0
    {
        BonusAlpha -= 1/30
        TextAlpha -= 1/30
    }
    else
    {
        instance_destroy()
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
