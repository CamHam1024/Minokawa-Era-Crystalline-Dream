<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Host = 0
MoveDir = 0
Scale = 1
Rot = random(360)
Sat = random(255)
Hue = 0
Colour = make_colour_hsv(Hue, Sat, 255)
Alpha = 0

CenterX = x
CenterY = y

Direction = random(360)
Length = ceil(random_range(300,1000))
StartLength = Length

AlphaPhase = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>CenterX = Host.x
CenterY = Host.y

Hue = Host.Hue
Colour = make_colour_hsv(Hue, Sat, 255)

draw_set_blend_mode(bm_add)
if MoveDir = 0
{
    draw_sprite_ext(spr_ChargeGem, 0, x, y, Scale, Scale, Rot, Colour, Alpha)
    x = CenterX + lengthdir_x(Length, Direction)
    y = CenterY + lengthdir_y(Length, Direction)
}
else
{
    draw_sprite_ext(spr_ChargeGem, 0, x, y, Scale, Scale, -Rot, Colour, Alpha)
    x = CenterX + lengthdir_x(Length, -Direction)
    y = CenterY + lengthdir_y(Length, -Direction)
}
draw_set_blend_mode(bm_normal)

Direction += 3
Direction = Direction % 360

Rot += random(5)
Rot = Rot % 360


if AlphaPhase = 0
{
    if Alpha &lt; 1
    {
        Alpha += 1/40
    }
    else
    {
        AlphaPhase = 1
    }
}

if AlphaPhase = 1
{
    if Alpha &gt; 0
    {
        Alpha -= 1/40
    }
}


if Length &gt; 0
{
    Length -= StartLength/40
}
else
{
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
