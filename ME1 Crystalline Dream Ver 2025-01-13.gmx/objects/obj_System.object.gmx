<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_SystemIcon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>30</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Importent Init variables</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialization and Setting's Loaded
image_alpha = 0
//display_reset(8, false);

//here will be a collection of Scripts that will be initialized at the start of the game
global.DefaultBGM = 0
global.DefaultSFX = 0
global.DefaultPlSFX = 0
global.DefaultScreen = false
global.DefaultLanguage = 0  // 0 = English, 1 = French

SFXNum = 0
MaxSFXArray = 300

repeat(MaxSFXArray)
{
    SFX[SFXNum] = -1 //Small collectables
    SFXNum ++
}

SFXNum = 0

script_execute(scr_SoundInit)

//BGM Unlocked
//Name, Locked name, Unlcoked?
//if ds_grid_get(global.OstUnlocked, 0, 2) = false
//{
//   //Code here
//}
SN = 0
repeat(4) //0 = Easy, 1 = Normal, 2 = Hard, 3 = Flightless
{
    global.Scoreboard[SN] = ds_grid_create(4,11) //Scoreboard
    SN ++
}

global.OstUnlocked = ds_grid_create(3,24) //Height = 24 in full game

script_execute(OSTUnlocks_init)
script_execute(scr_Load)

instance_create(x, y, obj_MusicHandler)

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu settings and general Settings

//Game Init //These  Settings are determined before you play the game
global.Player = "Midnight" //This Determins what Player is playing.
global.Diff = "Hard" //This Determins what Difficulty the game is
//Easy, Normal, Hard, Flightless

//General game Settings //These settings will effect almost everything unless stated

//Stage Settings
global.StageActivated = false //this determins weither or not the stage clock is active
global.CurrentStage = "St1"
//Stage 1A, Stage1B, Stage 2, Stage 3, Stage 4, Stage 5A, Stage 5B, Stage 6A, Stage 6B, Extra, SecretA, SecretB

//unlocks
global.ExtraUnlocked = false
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Main Menu</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug
instance_create(0, 0, obj_Debug)
if room = room_MainMenu
{
    instance_create(0, 0, obj_CloudCurtains)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Ingame variables</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gameover
GOT = 0
global.GameOver = false
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player and Scoring variables

//=[Scoreing variables]=
//Grazing
global.PreenChain = 0 //The ammount of Bullets grazed without dieing
global.PreenCounter = 0 //this is the ammount of bullets needing to be graded before next increase in point multiplyer
PreenNextlevel = 100
global.PreenTotal = 0 //Totel number of bullets grazed
global.PreenPointMultiply = 1 //This value goes up in tandem with GrazeChain Add a Score multiplier

//General Score
global.Score = 0
global.ScoreOwed = 0

//Setting HighScore
global.HiScore = 0

//== continues ==
global.Continues = 9
global.ContinuePoint = 0

//=[Player variables]=
//ScoreStuff
global.ScoreManaCollected = 0
global.MaxScoreMana = 100

//Visible variables: These variables are measured and are visible at all times during the game
global.LifeCrystals = 10 
global.LifeManaCollected = 0
global.MaxLifeMana = 100

global.SpellCrystals = 10
global.SpellManaCollected = 0
global.MaxSpellMana = 300

global.AttackLevel = 0
global.AttackManaCollected = 0

//Hidden Player variables: These variables are hidden and have Miscallanius effects when changed.
global.PlayerSpeed = 1 //This may or maynot be used but it will control how fast the player is moving.
global.DialogActive = false //this determines weither or not the player is ingagued in a game stopping conversation
global.Autocollect = false //This Toggles the Auto collect function
global.AutoCollectPoint = 300

global.TotSpellcardsCaptured[0] = 0 //Easy
global.TotSpellcardsCaptured[1] = 0 //Normal
global.TotSpellcardsCaptured[2] = 0 //Hard
global.TotSpellcardsCaptured[3] = 0 //Flightless

global.TotSpellcardsCaptured[4] = 0 //Total

//Mechanic Points
global.DreamBoarderPoint = 0
global.DreamBoarderMax = 100
global.DreamBoarderActivate = false
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Boss and Spellcard infomation
//-=[Visible variables]=
//Boss variables
global.BossName = "" //Boss's name
global.Spellcards = 0 //How many Spellcards the boss starts with
global.RemainingSpellcards = 0 //this is used so i can record how many spellcards the boss has remaining
global.BossActive = 0

//Spellcard Infomation
//Spellcard Capture/ Bonus
global.SpellCaptured = true //Is the spellcard Captured?
global.Spellcardname = "Pureity of Light: Nothing to see here!" //spellcard name
global.SpellBonus = 1234567890 //the Spellcard Bonus Avalible
global.SpellcardTimeSec = 0 //how many seconds the spellcard starts with
global.SpellTimeStart = global.SpellcardTimeSec
global.SpellcardTimeMiliSec = 0 
global.SpellcardType = "NonSpell" //Types: NonSpell, Spellcard, TimeOut
global.LastWord = false
global.SpellcardElement = "Void" //[This may or maynot be used] This variable will show what Element the current spellcard is

global.SpellcardMaxHealth = 1
global.SpellcardHealth = global.SpellcardMaxHealth
global.SpellcardCleared = false //Clear any bullets onj the screen

//-=[Hidden Spellcard Variables]=-
global.SpellTimerActive = false //if Set to false the Spellcard timer will not count down (Useful for infinite timers)
global.SpellcardBulletRes = 1 //this shows the damamge the player will do to the boss at 1 equals Normal Damage
global.SpellcardBombRes = 1 //similar to Bullet Resistence but for Bomb related damages

global.SpellHUDdisplay = false //this controls weither or not the Boss HUD is displayed
global.SecondarynonSpell = false

Killtimer = 0

//-[movement]=-
global.CordTimer = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Developer Notes
/*

This Function will be where i record certain things that i might require in the future
it will be used regularly to note things anywhere from Code chunks to things on my 
ToDo List.

//Code Chunks

========================================================
Bullet Spread
========================================================
//= Settings =========  
shotnum = [Number of Bullets]
shotdir = [Direction of Bullet]
rad = [How far from the center]
fireX = x
fireY = y
shotspeed = [Bullet Speed]
shotspread = [Spread of Bullet]
shotobject = [Bullet Itself]

//-=[Bullet Spawner]=-
shotdir -= shotspread / 2
            
repeat shotnum 
    {
    b = instance_create(fireX + lengthdir_x(rad, shotdir) ,fireY + lengthdir_y(rad, shotdir),shotobject)   
    b.speed = shotspeed
    b.direction = shotdir
    shotdir += shotspread/(shotnum)
    }
========================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++
========================================================
Sound Emitter (For any Sound playied in Rapid Succession)
========================================================
For this section to work please make sure all of the
desired sounds are initialized in scr_SoundInit before 
hand using this string:

soundplayed[Desired SFX] = false

Then you put this string where ever you want the sound playied:

soundplayed[Desired SFX] = false
    {
    SFX = [Desired SFX]
    audio_stop_sound(SFX)
    audio_play_sound(SFX, 0, 0)
    audio_sound_gain(SFX, global.VolSFX, 0)
    }

========================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++
========================================================
========================================================

========================================================
Change Log
========================================================
Here will be a Day to Day log of everything i have done 
with Crystalline Dream. this will also include tasks for
me to do each day or so.

16/8/16: Created obj_System and setting up all initial
Variables ready to start full on work.

18/8/16: Worked on the drawing of all the HUD elements
from what i can see all HUD elements are all properly 
drawn!


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GameOver
if global.GameOver = true
{
    if GOT &lt; 30
    {
        GOT++
    }
    else
    {
        GameOver = instance_create(0,0,obj_PauseMenu)
        GameOver.MenuSet = "GameOver"
        global.GameOver = false
        GOT  = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fullscreen and other Settings
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Point of Collection

if instance_exists(obj_ParPlayer)
{
    if obj_ParPlayer.y &lt;= global.AutoCollectPoint
    {
        global.Autocollect = true
    }
    else
    {
        global.Autocollect = false
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SpellcardTimer

//Spellcard Countdown snd_SFX_EndTimeCrit
if global.SpellTimerActive = true and !instance_exists(obj_PauseMenu) and room = room_Stage
   {
   global.SpellcardTimeMiliSec -= 1
   
   if global.SpellcardTimeMiliSec &lt;= 0
   {
      if global.SpellcardTimeSec &lt;= 11
      {
         if global.SpellcardTimeSec &lt;= 6 and global.SpellcardTimeSec &gt; 0
         {
                audio_play_sound(snd_SFX_EndTimeCrit, 0, 0)
                audio_sound_gain(snd_SFX_EndTimeCrit, global.VolSFX/2, 0)
         }
      }
         
      global.SpellcardTimeSec -= 1
      global.SpellcardTimeMiliSec = 60
   }
    
   if global.SpellcardTimeSec &lt;= -1
      {
      global.SpellcardTimeSec = 0
      global.SpellcardTimeMiliSec = 0
      }
   }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Life and Bomb System
//Bombs
if global.SpellManaCollected &gt;= global.MaxSpellMana
{
   obj_GameHUD.SpellExtendDisplay = true
   if global.SpellCrystals &lt; 10
   {
        Play_Sound_Fancy(snd_SFX_1UP,global.VolSFX)
      
      global.SpellCrystals += 1
      global.SpellManaCollected = 0
   } 
}
   
//Lives
if global.LifeManaCollected &gt;= global.MaxLifeMana
   {
   obj_GameHUD.LifeExtendDisplay = true
   if global.LifeCrystals &lt; 10
      {
      
        Play_Sound_Fancy(snd_SFX_1UP,global.VolSFX)
      
      global.LifeCrystals += 1
      global.LifeManaCollected = 0
      } 
   }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Preening System

/*
if global.PreenCounter &gt;= PreenNextlevel
{
   if global.PreenPointMultiply &lt; 10 
   {
        global.PreenCounter = 0
        global.PreenPointMultiply += 0.5
        PreenNextlevel += 10
   }
}
*/

if instance_exists(obj_GameHUD)
{
    if global.ScoreManaCollected &gt;= global.MaxScoreMana
    {
        if global.PreenPointMultiply &lt; 5 
        {
            global.ScoreManaCollected = 0
            global.PreenPointMultiply += 0.5
            Play_Sound_Fancy(snd_SFX_MultiplierUp,global.VolSFX)
            obj_GameHUD.MultiBurst = true
        }
    }
    
    if global.PreenPointMultiply &lt; 1
    {
        global.PreenPointMultiply = 1
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mechanic
//Mechanic set up
if global.DreamBoarderPoint &gt; global.DreamBoarderMax
{
    global.DreamBoarderPoint = global.DreamBoarderMax
}

if global.DreamBoarderPoint = global.DreamBoarderMax
{
    if global.DreamBoarderActivate = false
    {
        global.DreamBoarderActivate = true
        instance_create(x, y, obj_CloudRing)
    }
}


//Apon activated
if global.DreamBoarderActivate = true and !instance_exists(obj_ParDialog)
{
    Seconds = 60*10
    global.DreamBoarderPoint -= global.DreamBoarderMax/Seconds
    
    if global.DreamBoarderPoint &lt;= 0
    {
        global.DreamBoarderActivate = false
        global.DreamBoarderPoint = 0
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Scoreing

//Fixed Score speed
if global.ScoreOwed &gt; 1
    {
    add = clamp(ceil(global.ScoreOwed/10), 10, global.ScoreOwed)
    global.Score += add
    global.ScoreOwed -= add
    }

//Hi Score and Score Sync
if global.Score &gt; global.HiScore
    {
    global.HiScore = global.Score
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spellcard Clear Reset

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_Boarder, 0, 0, 0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
