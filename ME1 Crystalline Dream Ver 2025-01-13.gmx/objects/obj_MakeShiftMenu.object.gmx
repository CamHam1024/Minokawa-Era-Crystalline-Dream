<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu Options
Menuopt[0,0] = "Easy"
Menuopt[1,0] = "Normal"
Menuopt[2,0] = "Hard"
Menuopt[3,0] = "Flightless"

Menuopt[0,1] = "Play Full Stage"
Menuopt[1,1] = "Boss Only"

Menuopt[0,2] = "Midnight"
Menuopt[1,2] = "Alex"
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu Options Variables
MenuOpt = 0
MenuSelection0 = 0
Menu = 0

MenuYpos = 0
OptRep = 0

MenuTimeOut = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu Draw
MenuDescription = "Almost there *vibrates* Update!
-All of the stage portion done!!!
-Buffed Alex Alil!
-Gave Lilli a new non on Easy/Normal
-Will i ever be done?"

draw_set_alpha(0.6)
draw_rectangle_colour(0, 530, 1024, 768, c_black, c_black, c_black, c_black, 0)
draw_set_alpha(1)

draw_text_outline(20, 550, string(MenuDescription),c_white, c_blue, 1, ft_DifficultyDisplay, 1)

//=Version=Number==============
draw_text_outline(10, 768 - 30, "Ver: 16.11.2019(Yeet)",c_white, c_blue, 1, ft_SmallPreenText, 1)
//=============================

if MenuSelection0 = 2
{
    
}

if MenuSelection0 = 3
{
    draw_text_outline(20, 630, "Bosses has +1 spellcards",c_red, c_black, 1, ft_DifficultyDisplay, 1)
}
    
    
if Menu = 0
{
    Xpositioning = 40
    YPositioning = 100

    draw_set_alpha(0.6)
    draw_rectangle_colour(Xpositioning - 20, YPositioning, 250, 310, c_black, c_black, c_black, c_black, 0)
    draw_set_alpha(1)
    
    if MenuSelection0 = 0
    {
        draw_text_outline(Xpositioning, YPositioning, string(Menuopt[0,0]),c_white, c_black, 1, ft_DifficultyDisplayMenu, 1)
        draw_text_outline(Xpositioning, YPositioning+50, string(Menuopt[1,0]),c_white, c_black, 1, ft_DifficultyDisplayMenu, 0.5)
        draw_text_outline(Xpositioning, YPositioning+100, string(Menuopt[2,0]),c_white, c_black, 1, ft_DifficultyDisplayMenu, 0.5)
        draw_text_outline(Xpositioning, YPositioning+150, string(Menuopt[3,0]),c_white, c_black, 1, ft_DifficultyDisplayMenu, 0.5)
    }

    if MenuSelection0 = 1
    {
        draw_text_outline(Xpositioning, YPositioning, string(Menuopt[0,0]),c_white, c_black, 1, ft_DifficultyDisplayMenu, 0.5)
        draw_text_outline(Xpositioning, YPositioning+50, string(Menuopt[1,0]),c_white, c_black, 1, ft_DifficultyDisplayMenu, 1)
        draw_text_outline(Xpositioning, YPositioning+100, string(Menuopt[2,0]),c_white, c_black, 1, ft_DifficultyDisplayMenu, 0.5)
        draw_text_outline(Xpositioning, YPositioning+150, string(Menuopt[3,0]),c_white, c_black, 1, ft_DifficultyDisplayMenu, 0.5)
    }

    if MenuSelection0 = 2
    {
        draw_text_outline(Xpositioning, YPositioning, string(Menuopt[0,0]),c_white, c_black, 1, ft_DifficultyDisplayMenu, 0.5)
        draw_text_outline(Xpositioning, YPositioning+50, string(Menuopt[1,0]),c_white, c_black, 1, ft_DifficultyDisplayMenu, 0.5)
        draw_text_outline(Xpositioning, YPositioning+100, string(Menuopt[2,0]),c_white, c_black, 1, ft_DifficultyDisplayMenu, 1)
        draw_text_outline(Xpositioning, YPositioning+150, string(Menuopt[3,0]),c_white, c_black, 1, ft_DifficultyDisplayMenu, 0.5)
    }

    if MenuSelection0 = 3
    {
        draw_text_outline(Xpositioning, YPositioning, string(Menuopt[0,0]),c_white, c_black, 1, ft_DifficultyDisplayMenu, 0.5)
        draw_text_outline(Xpositioning, YPositioning+50, string(Menuopt[1,0]),c_white, c_black, 1, ft_DifficultyDisplayMenu, 0.5)
        draw_text_outline(Xpositioning, YPositioning+100, string(Menuopt[2,0]),c_white, c_black, 1, ft_DifficultyDisplayMenu, 0.5)
        draw_text_outline(Xpositioning, YPositioning+150, string(Menuopt[3,0]),c_white, c_black, 1, ft_DifficultyDisplayMenu, 1)
    }

    if keyboard_check_pressed(ord("Z"))
    {
        if MenuSelection0 = 0
        {
            global.Diff = "Easy"
            MenuSelection0 = 0
            Menu = 1
        }
    
        if MenuSelection0 = 1
        {
            global.Diff = "Normal"
            MenuSelection0 = 0
            Menu = 1
        }
    
        if MenuSelection0 = 2
        {
            global.Diff = "Hard"
            MenuSelection0 = 0
            Menu = 1
        }
    
        if MenuSelection0 = 3
        {
            global.Diff = "Flightless"
            MenuSelection0 = 0
            Menu = 1
        }
    }
}



if Menu = 1
{
    Offset = 50
    
    draw_set_alpha(0.6)
    draw_rectangle_colour(1024/2 - 140 ,768/2 - 160, 1024/2 + 165, 768/2 - 35, c_black, c_black, c_black, c_black, 0)
    draw_set_alpha(1)
    
    if MenuSelection0 = 0
    {
        draw_text_outline(1024/2 - 120 ,768/2 - 150, string(Menuopt[0,2]),c_white, c_black, 1, ft_DifficultyDisplayMenu, 1)
        draw_text_outline(1024/2 - 120, 768/2 - 100, string(Menuopt[1,2]),c_white, c_black, 1, ft_DifficultyDisplayMenu, 0.5)
        draw_text_outline(1024/2 - 132, 768/2 - 30, "Play as Midnight" ,c_yellow, c_black, 1, ft_DifficultyDisplay, 1)
    }
        
    if MenuSelection0 = 1
    {
        draw_text_outline(1024/2 - 120 ,768/2 - 150, string(Menuopt[0,2]),c_white, c_black, 1, ft_DifficultyDisplayMenu, 0.5)
        draw_text_outline(1024/2 - 120, 768/2 - 100, string(Menuopt[1,2]),c_white, c_black, 1, ft_DifficultyDisplayMenu, 1)
        draw_text_outline(1024/2 - 132, 768/2 - 30, "Play as Alex" ,c_yellow, c_black, 1, ft_DifficultyDisplay, 1)
    }
        
    if MenuTimeOut &lt; 10
    {
        MenuTimeOut += 1
    }
    
    if keyboard_check_pressed(ord("Z"))
    {
        if MenuTimeOut = 10
        {
            if MenuSelection0 = 0
            {
                global.Player = "Midnight"
                
                room_goto(room_Stage)
                //room_goto(Test_Room)
            }
        
            if MenuSelection0 = 1
            {
                global.Player = "Alex"
                
                room_goto(room_Stage)
                //room_goto(Test_Room)
            }
            
            obj_MusicHandler.TrackNo = 1
            obj_MusicHandler.SoundSilenced = false
            obj_MusicHandler.MusicReset = true
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Menu = 0
{
    if MenuSelection0 = 3
    {
        MenuSelection0 = 0
    }
    else
    {
        MenuSelection0 += 1
    }
}

if Menu = 1
{
    if MenuSelection0 = 1
    {
        MenuSelection0 = 0
    }
    else
    {
        MenuSelection0 += 1
    }
}

if Menu = 2
{
    if MenuSelection0 = 1
    {
        MenuSelection0 = 0
    }
    else
    {
        MenuSelection0 += 1
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Menu = 0
{
    if MenuSelection0 = 0
    {
        MenuSelection0 = 3
    }
    else
    {
        MenuSelection0 -= 1
    }
}

if Menu = 1
{
    if MenuSelection0 = 0
    {
        MenuSelection0 = 1
    }
    else
    {
        MenuSelection0 -= 1
    }
}

if Menu = 2
{
    if MenuSelection0 = 0
    {
        MenuSelection0 = 1
    }
    else
    {
        MenuSelection0 -= 1
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
