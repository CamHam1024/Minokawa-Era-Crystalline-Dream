<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_SolidLaser</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_ParDanmaku</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Basic variables
//Colour Init
Red = 255
Green = 25
Blue = 25

//Destroy conditions
//[Resistences]
BombResistence = true //does Bombs effect the bullet?
OffScreenKill = false //Destroys the bullet when its off the screen
SpellcardCleared = false //Destroys the Bullet at the end of the Spellcard

//[Kill variables]
Kill = false //setting true will Kill the bullet

//[Give Score When killed]
ScoreEnabled = false
Preened = false
PreenRad = abs(bbox_right - bbox_left) / 2 + 8

//Sprite variables
//[General]
image_alpha = 0
Created = false
image_speed = 0
image_angle = direction - 90
image_xscale = 1
image_yscale = 1
SpriteSize = 100
Deadly = true
ScoreGiven = false
KillSound = true
Laser = true

//[Animation]
SpriteAnimated = false
SpriteBlendModed = false
BlendModeType = bm_add
ImageIndex = 0
ImageFrame = 0

//[Direction]
PointInDirection = true
StartDirection = image_angle

//Effects
//[Enabled]
CreateEffect = false
DeathEffect = false

//[Effect variables (Create Effect)]
CreateEffectRot = random(360)
CreateX = x
CreateY = y
CreateScale = 1.5

//[Effect variables (Death Effect)]
DeathFrameMax = 7
DeathFrame = 0
DeathScale = 1.5

//-=Colour Key=-
/* 
0, 0 = red  R: 251 G: 0 B: 0
1, 4 = orange R: 251 G: 126 B: 0
2, 8 = yellow R: 251 G: 251 B: 0
3, 12 = green R: 0 G: 251 B: 0
4, 16 = cyan R: 0 G: 251 B: 251
5, 20 = blue R: 0 G: 0 B: 251
6, 24 = purple R: 251 G: 0 B: 251
7, 28 = white R: 251 G: 251 B: 251
*/






</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Properties
Timer = 0
PhaseOut = true

LLength = 0
ID = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Killers

//Off Screen
if OffScreenKill = true
   {
   if x &lt; 192 - SpriteSize or x &gt; 832 + SpriteSize
      {
      instance_destroy()
      }
      
   if y &lt; 14 - SpriteSize or y &gt; 752 + SpriteSize
      {
      instance_destroy()
      }
   }
   
//Player Bombs
if place_meeting(x, y, obj_ParPlayerBomb) and BombResistence = false
   {
   ScoreEnabled = true
   DeathEffect = true
   Kill = true
   if KillSound = true
      {
      soundplayed[snd_BulletClear] = false
      {
      SFX = snd_BulletClear
      audio_stop_sound(SFX)
      audio_play_sound(SFX, 0, 0)
      audio_sound_gain(SFX, global.VolSFX/3, 0)
      }
      KillSound = true
      }
      }
      
//Spellcard Cleared
if !instance_exists(ID)
   {
   ScoreEnabled = true
   DeathEffect = true
   Kill = true
   if KillSound = true
      {
      soundplayed[snd_BulletClear] = false
      {
      SFX = snd_BulletClear
      audio_stop_sound(SFX)
      audio_play_sound(SFX, 0, 0)
      audio_sound_gain(SFX, global.VolSFX/3, 0)
      }
      KillSound = true
      }
   }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Preening

if instance_exists(obj_ParPlayer)
   {
        Player = instance_nearest(x, y, obj_ParPlayer)
        if Laser = false
        {
            if Preened = false and Deadly = true
            {
                if point_distance(Player.x, Player.y, x, y) &lt; PreenRad
                {
                    global.PreenChain += 1
                    global.PreenCounter += 1
                    global.PreenTotal += 1
                    Preened = true
                }
            }
        }else{
        if Deadly = true
        {
            if point_distance(Player.x, Player.y, x, y) &lt; PreenRad
            {
                global.PreenChain += 1
                global.PreenCounter += 1
                global.PreenTotal += 1
                Preened = true
            }
        }
        }
   }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Properties

if instance_exists(ID)
{
    //Movement
    x = ID.x + lengthdir_x(LLength, ID.direction)
    y = ID.y + lengthdir_y(LLength, ID.direction)

    //Laser Phasing
    if ID.PhaseOut = true
    {
        Deadly = false
    }else{
        Deadly = true
    }
   
    if ID.PhaseOut = false
    {
        if image_xscale &lt; 1
        {
        image_xscale += 0.05
        }
    }else{
    if image_xscale &gt; 0.1
       {
       image_xscale -= 0.05
       }
   }
   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Effects general
EffectColour = make_colour_rgb(Red, Green, Blue)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creation Effect
if CreateEffect = true
   {
   CreateEffectRot = CreateEffectRot mod 360
   CreateEffectRot += 10
   draw_set_blend_mode(bm_add)
   draw_sprite_ext(spr_ExplosionEffect, 0, CreateX, CreateY, CreateScale, CreateScale, CreateEffectRot, EffectColour, 0.8)
   //draw_sprite_ext(spr_ExplosionEffect, 0, CreateX, CreateY, CreateScale, CreateScale, CreateEffectRot - 180, EffectColour, 1)
   draw_set_blend_mode(bm_normal)
   if CreateScale &gt; 0
      {
      CreateScale -= 0.05
      }else{
      CreateEffect = false
      }
   }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death Effect
if Kill = true
   {
   if ScoreGiven = false and ScoreEnabled = true
      {
      global.ScoreOwed = ceil(10 * global.PreenPointMultiply)
      ScoreGiven = true
      }
      
   speed = 0
   image_alpha = 0
   Deadly = false
   
   if DeathEffect = true
      {
      draw_set_blend_mode(bm_add)
      draw_sprite_ext(spr_DeletionEffect, DeathFrame, x, y, DeathScale, DeathScale, random(360), EffectColour, 1)
      draw_set_blend_mode(bm_normal)
      DeathFrame += 0.5
      
      if DeathFrame = DeathFrameMax
         {
         instance_destroy()
         }
      }else{
      instance_destroy()
      }
   
   }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation
if Kill = false
{
if SpriteBlendModed = false
   {
   draw_self()
   }else{
   draw_set_blend_mode(BlendModeType)
   draw_self()
   draw_set_blend_mode(bm_normal)
   }

if Created = false
   {
   if image_alpha &lt; 1
      {
      image_alpha += 0.1
      }else{
      Created = true
      }
   }

if SpriteAnimated = true
    {
    ImageFrame = ImageFrame mod 3
    ImageFrame += 0.25
    
    image_index = ImageIndex + ImageFrame
    }else{
    image_index = ImageIndex
    }
    
if PointInDirection = true
   {
        if instance_exists(ID)
        {
        direction = ID.direction
        }
   image_angle = direction - 90
   }else{
   image_angle = StartDirection
   //image_angle = image_angle mod 360
   //image_angle += 1
   }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug
if instance_exists(obj_Debug)
{
    if obj_Debug.Grid = 1
    {
        draw_set_colour(c_red)
        draw_circle(x,y, PreenRad, 1)
        draw_set_colour(c_black)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
