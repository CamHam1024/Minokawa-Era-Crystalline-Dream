<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_EnemyFirefly</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_ParEnemyOrbs</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy Status variables
event_inherited()

EnemyHP = 20
ScoreGiven = 100
Type = 0

//Colour
Red = 100
Green = 100
Blue = 100
Colour = make_colour_rgb(Red, Green, Blue)

image_speed = 0
image_index = 2
image_xscale = 1
image_yscale = image_xscale
Rotation = 0
attack = 0 //this is for the slash and damage effects
DeathEffectSize = 1.5

//Movement Settings
CenterX = x
CenterY = y
Radius = 0
SpinSpeed = random(360)
MovementTimer = 0 
YIncriment = 0

xcord = x
ycord = y
Speed = 10

//Sigil Settings
Scale = 0
MaxScale = 1
MinScale = 0.6
ScaleSwitch = false

Spin = 0

StartWabble = false

//Pickups
//Mana
//Small
SmallMana = 1
//Large
LargeMana = 0

//Life
//Dream
SmallLife = 1
//Large
LargeLife = 0

//Score
ScorePeice = 3

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Effect Particles
EffectEmitter = 0
PiN = false //Point in direction
EffDir = 0
frameshift = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Effect Variables
EffectScale = 0.5
LociSpin = 0
LociIndex = 0
//effect 1
NoEffect = 5
Efval = 0
repeat(NoEffect)
{
    SpriteSpinRate[Efval] = random_range(1,3)
    SpriteSpin[Efval] = 0
    OrbitDir[Efval] = random(360)
    Maxxrad[Efval] = random_range(5,40)
    Maxyrad[Efval] = random_range(1,10)
    xrad[Efval] = 0
    yrad[Efval] = 0
    
    Efval += 1
}
Efval = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy Attack variables
Attacking = false //can the enbnmy attack?
PtP = 0 // Point to Player var
Fire = 0  //Fire Rate

WaitingTime = random_range(10, 30)
Waitingtimer = 0

MoveSpeed = 3 + random_range(-1,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy Death
if EnemyHP &lt;= 0
{
//Effect
//Burst wave
Effect = instance_create(x, y, obj_EnemyBurstEffect)
Effect.R = Red
Effect.G = Green
Effect.B = Blue
Effect.image_xscale = DeathEffectSize
Effect.image_yscale = DeathEffectSize

//Particles
NumberOfEffect = 3
repeat (NumberOfEffect)
       {
       Effect = instance_create(x, y, obj_EnemyExplode)
       Effect.R = Red
       Effect.G = Green
       Effect.B = Blue
       Effect.speed = random_range(2, 5)
       Effect.direction= random(360)
       }

//Sounds 
Play_Sound_Fancy(snd_SFX_EnemyDead,global.VolSFX/2)

//Score
global.ScoreOwed += ceil(ScoreGiven * global.PreenPointMultiply)

//Mana Fragments
//Small
repeat(SmallMana)
     {
     Manasmall = instance_create(x, y, obj_ManaSmall)
     }
     
//Large
repeat(LargeMana)
{
     Manalarge = instance_create(x, y, obj_ManaLarge)
}

//Dream fragments
//Dream
repeat(SmallLife)
{
     Lifesmall = instance_create(x, y, obj_DreamFlyItem)
}
     
//Large Life
repeat(LargeLife)
{
     Lifelarge = instance_create(x, y, obj_LifeLarge)
}
     
//Score
repeat(ScorePeice)
{
     ScoreCollection = instance_create(x, y, obj_Score)
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death shots
if Attacking = true
{
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Base stuff 
event_inherited()

deathRad = 64
if x &lt; 192  or x &gt; 832 or y &lt; 14 or y &gt; 752
{
      Attacking = false
}

if x &lt; 192 - deathRad  or x &gt; 832 + deathRad or y &lt; 14 - deathRad or y &gt; 752 + deathRad
{
      instance_destroy()
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy Effects
/*EffectEmitter += 1
EffectEmitter = EffectEmitter mod 5
if EffectEmitter = 0
{
    effect = instance_create(x + lengthdir_x(random(8), random(360)), y + lengthdir_y(random(8), random(360)), obj_WispFire)
    effect.image_blend = make_colour_rgb(Red, Green, Blue)
    
    effect = instance_create(x + lengthdir_x(random(8), random(360)), y + lengthdir_y(random(8), random(360)), obj_WispFire)
    effect.image_blend = make_colour_rgb(Red, Green, Blue)
   
     effect = instance_create(x + lengthdir_x(random(8), random(360)), y + lengthdir_y(random(8), random(360)), obj_WispFire)
     effect.image_blend = make_colour_rgb(Red, Green, Blue)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Customizeables</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
//Base Movement
//EnemyMove()

//Custom Movement
if speed &lt; MoveSpeed
{
    speed += 0.01
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack
if Waitingtimer &lt; WaitingTime
{
    Waitingtimer += 1
}
else
{
    Attacking = true
}


if Attacking = true
{
    if global.Diff = "Easy"
    {
        Fire += 1
        Fire = Fire % 120
        if Fire = 1
        {
            basic_bullet_burst(obj_Stage1Firefly3Danmaku, 2 , random_range(-3,3), 10, x, y, 3, 0, 180)
        }
    }   

    if global.Diff = "Normal"
    {
        Fire += 1
        Fire = Fire % 100
        if Fire = 1
        {
            basic_bullet_burst(obj_Stage1Firefly3Danmaku, 2, random_range(-3,3), 10, x, y, 3, 0, 180)
        }
    }

    if global.Diff = "Hard"
    {
        Fire += 1
        Fire = Fire % 70
        if Fire = 1
        {
            basic_bullet_burst(obj_Stage1Firefly3Danmaku, 2, random_range(-3,3), 10, x, y, 5, 0, 180)
        }
    }

    if global.Diff = "Flightless"
    {
        Fire += 1
        Fire = Fire % 70
        if Fire = 1
        {
            basic_bullet_burst(obj_Stage1Firefly3Danmaku, 2, random_range(-3,3), 10, x, y, 5, 0, 180)
            basic_bullet_burst(obj_Stage1Firefly3Danmaku, 2, random_range(-3,3), 10, x, y, 4.5, 0, 180)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sigil
Colour = make_colour_rgb(Red, Green, Blue)
//draw_sprite_ext(spr_LightningBug, LociIndex, x, y, 1, 1, LociSpin, Colour, 0.3)
draw_set_blend_mode(bm_add)
draw_sprite_ext(spr_EnemyFirefly, 0, x, y, Scale+1, Scale+1, Spin, Colour, 0.5)


Efval = 0
repeat(NoEffect)
{
    anglevar[Efval] = SpriteSpin[Efval]; //angle variation per bullet
    SpriteSpin[Efval] += SpriteSpinRate[Efval]
    SpriteSpin[Efval] = SpriteSpin[Efval] mod 360
    ovalrot_S[Efval] = dsin(OrbitDir[Efval]); //sine of the rotation angle (use sin instead of dsin if radians)
    ovalrot_C[Efval] = dcos(OrbitDir[Efval]); //sine of the rotation angle (use cos instead of dcos if radians)
    xfactor[Efval] = lengthdir_x(xrad[Efval],SpriteSpin[Efval]); //x and y position on basic oval
    yfactor[Efval] = lengthdir_y(yrad[Efval],SpriteSpin[Efval]);
    finalX[Efval] = xfactor[Efval] * ovalrot_C[Efval] - yfactor[Efval] * ovalrot_S[Efval]; //final x and y after rotation
    finalY[Efval] = xfactor[Efval] * ovalrot_S[Efval] + yfactor[Efval] * ovalrot_C[Efval];

    if xrad[Efval] &lt; Maxxrad[Efval]
    {
        xrad[Efval] += Maxxrad[Efval]/60
        yrad[Efval] += Maxyrad[Efval]/60
    }
    
    draw_sprite_ext(spr_EnemyFirefly, 0, x+finalX[Efval], y+finalY[Efval], EffectScale, EffectScale, Spin, Colour, 0.4)
    Efval += 1
}

draw_set_blend_mode(bm_normal)

//Scale wabble
if StartWabble = false
{
    Scale += 0.03
    if Scale &gt;= MinScale
    {
    StartWabble = true
    }
}
if StartWabble = true
{
    if ScaleSwitch = false 
    {
        Scale += 0.01
    }
    else
    {
        Scale -= 0.01
    }
    
    if Scale &gt;= MaxScale
    {
        ScaleSwitch = true
    }

    if Scale &lt;= MinScale
    {
        ScaleSwitch = false
    }
}

//Rotation
Spin += 5
Spin = Spin mod 360
LociSpin += 30
LociSpin = LociSpin mod 360
LociIndex += 1
LociIndex = LociIndex mod 3

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
