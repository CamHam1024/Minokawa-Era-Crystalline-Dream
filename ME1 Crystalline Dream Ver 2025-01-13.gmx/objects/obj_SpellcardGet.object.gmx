<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-15</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Spellcapture text vars
ShowSpellcardStat= false
FailedOrget = true

//Spellcard get!
CapTimer = 0
SpellClearedYscale = 0
SpellClearedX = 0
BonusTextAlpha = 0
SpellClearedMovement1 = false
SpellClearedMovement2 = false
CaptureResetSwitch = false
PreenPointMultiply = global.PreenPointMultiply
CaptureBonusInit = global.SpellBonus * PreenPointMultiply
CaptureBonusAlpha = 0

//Spellcard failed...
FailedRot = 0
FailedAlpha = 1
FailedTimer = 0
FailedY = 0
FailedYIncriment = 0
FailedRotIncriment = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if FailedOrget = true {global.ScoreOwed += CaptureBonusInit}//else{instance_destroy()}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spellcard GET!

//Spellcard Cleared!
    if FailedOrget = true
        {
        draw_sprite_ext(spr_Spellcardget, 0, SpellClearedX, 200, 1, SpellClearedYscale, 0, c_white, 1)
        
        if SpellClearedYscale &lt; 1
                    {
                    SpellClearedYscale += 0.05
                    }
                    
        if SpellClearedMovement1 = false
            {
            if SpellClearedX &lt;= 1024/2
                {
                SpellClearedX += 30
                }else{
                SpellClearedMovement1 = true
                }
            }else{
            
            if BonusTextAlpha &lt; 1 and SpellClearedMovement2 = false
                {
                BonusTextAlpha += 0.1
                }
            if BonusTextAlpha &gt;= 1
                {
                if CapTimer &lt; 60
                    {
                    CapTimer += 1
                    }else{
                    SpellClearedMovement2 = true
                    }
                }
            
            if SpellClearedMovement2 = true
                {
                if SpellClearedYscale &gt; 0
                    {
                    SpellClearedYscale -= 0.1
                    }
                if SpellClearedX &lt;= 1024
                    {
                    SpellClearedX += 50
                    }
                if BonusTextAlpha &gt; 0
                    {
                    BonusTextAlpha -= 0.05
                    }
                    
                if SpellClearedX &gt;= 1024 and BonusTextAlpha &lt;= 0
                    {
                    instance_destroy()
                    }
                }
            draw_set_alpha(BonusTextAlpha)
            
            SpellBonus = string_repeat("0", 7 - string_length(string(floor(CaptureBonusInit)))) + string(CaptureBonusInit)
            for (var i = string_length(SpellBonus) - 2; i &gt; 1; i -= 3) {SpellBonus = string_insert(",", SpellBonus, i);}
           
            draw_text_outline(1024/2, 225, "Bonus: " + string(SpellBonus) + "#Multiplier: " + string(PreenPointMultiply), c_white, c_black, 1, ft_MailRayStuff, BonusTextAlpha)
            draw_set_alpha(1)
            
            }
            
        }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spell failed....

if FailedOrget = false
        {
        draw_sprite_ext(spr_Spellcardfailed, 0, 1024/2, 200 + FailedY, 1, 1, FailedRot, c_white, FailedAlpha)
        if FailedTimer &lt; 30
            {
            FailedTimer += 1
            }else{
            FailedRotIncriment += 0.01
            FailedRot -= FailedRotIncriment
            FailedYIncriment += 0.05
            FailedY += FailedYIncriment
            if FailedAlpha &gt; 0
                {
                FailedAlpha -= 0.01
                }
            
            if FailedAlpha = 0 {instance_destroy()}
            
            }
        }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
