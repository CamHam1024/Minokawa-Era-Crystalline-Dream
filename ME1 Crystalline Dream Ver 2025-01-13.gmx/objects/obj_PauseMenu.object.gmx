<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_PauseMenuIcon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-30</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variable init
Initialized = false
MenuSet = "Paused"
MenuMaximum = 4

PMenuOptions[0] = "Resume"
PMenuOptions[1] = "Restart"
PMenuOptions[2] = "Options"
PMenuOptions[3] = "Return to Title"

PMenuOptionFlavour[0] = "Resume"
PMenuOptionFlavour[1] = "Restart"
PMenuOptionFlavour[2] = "Options"
PMenuOptionFlavour[3] = "Return to Title"

//Menu Variables
MO = 0 //MO = Menu Option
MCS = make_colour_hsv(200, 100, 200) // MCS = MenuColour Selected
MCUS = make_colour_hsv(200, 50, 100) // MCUS = MenuColour UnSelected

//Display variables
Alpha = 0 //Alpha for the Main Display
PropX = -340 //X Position for Pause menu Prop 1

//Scoreboard Creation
ScoreSet = false
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Surface and object deactivation
//Deactivation of Objects
instance_deactivate_all(true)
instance_activate_object(obj_System)
instance_activate_object(obj_CloudCurtains)
instance_activate_object(obj_GameHUD)
instance_activate_object(obj_DrawSurfaceStart)
audio_pause_all()

//Surface Init
Surface = surface_create(1024, 768)

surface_set_target(Surface)
draw_clear_alpha(0, 0)
draw_enable_alphablend(false)
draw_surface_part_ext(application_surface,  0, 0, 1024, 768, 0, 0, 1, 1, c_white, 1)
draw_enable_alphablend(true)
surface_reset_target()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_activate_all()
audio_resume_all()

obj_GameHUD.PauseDelay = 50

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu Options
if MenuSet = "Paused"
{
    MenuMaximum = 4
    PMenuOptions[0] = "Resume"
    PMenuOptions[1] = "Restart"
    PMenuOptions[2] = "Options"
    PMenuOptions[3] = "Return to Title"
    
    PMenuOptionFlavour[0] = "Continue playing!"
    PMenuOptionFlavour[1] = "Restart from stage 1!#(You'll only keep added diary entrys...)"
    PMenuOptionFlavour[2] = "Adjust Options!"
    PMenuOptionFlavour[3] = "Exit to the main menu!#(You'll only keep added diary entrys...)"
}

if MenuSet = "GameOver"
{
    if ScoreSet = false
    {
        instance_create(512, 100, obj_ScoreSet)
        ScoreSet = true
    }

    MenuMaximum = 3
    PMenuOptions[0] = "Continue"
    PMenuOptions[1] = "Restart"
    PMenuOptions[2] = "Return to Title"
    
    PMenuOptionFlavour[0] = "Use a continue Coin..."
    PMenuOptionFlavour[1] = "Restart from stage 1!#(You'll only keep added diary entrys...)"
    PMenuOptionFlavour[2] = "Exit to the main menu!#(You'll only keep added diary entrys...)"
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Option Select
//Menu Movement
//MO = MenuOption
if !instance_exists(obj_Options) and !instance_exists(obj_ScoreSet)
{
    if keyboard_check_pressed(vk_up)
    {
        if MO &gt; 0 { MO -= 1 }
    }
    if keyboard_check_pressed(vk_down)
    {
        if MO &lt; MenuMaximum-1 { MO += 1 }
    }
    
    if keyboard_check_pressed(ord("Z"))
    {
        //Pause menu Options selection
        if MenuSet = "Paused"
        {   
            if MO = 0
            {
                instance_destroy()
            }
            if MO = 1
            {
                //reactivate Instances
                instance_activate_all()
                audio_resume_all()
                
                //Values reset
                global.LifeCrystals = 10 
                global.LifeManaCollected = 0
                global.MaxLifeMana = 100
                
                global.SpellCrystals = 10
                global.SpellManaCollected = 0
                global.MaxSpellMana = 300
                global.SpellcardType = "NonSpell"
                
                room_restart()
                
                //Destroy
                instance_destroy()
            }
            if MO = 2
            {
                instance_create(0, 0, obj_Options)
            }
            if MO = 3
            {
                //Values reset
                global.LifeCrystals = 10 
                global.LifeManaCollected = 0
                global.MaxLifeMana = 100
                
                global.SpellCrystals = 10
                global.SpellManaCollected = 0
                global.MaxSpellMana = 300
                
                global.SpellcardType = "NonSpell"
                
                obj_CloudCurtains.GoBackTrans = true
            }
        }
        //======================
        //===== GAme Over =====
        if MenuSet = "GameOver"
        {
            if MO = 0
            {
                //== continues ==
                //Values reset
                global.LifeCrystals = 3 
                global.LifeManaCollected = 0
                global.MaxLifeMana = 100
                
                global.SpellCrystals = 3
                global.SpellManaCollected = 0
                global.MaxSpellMana = 300
                
                instance_destroy()
            }
            if MO = 1
            {
                global.Continues = 9
                
                //Values reset
                global.LifeCrystals = 10 
                global.LifeManaCollected = 0
                global.MaxLifeMana = 100
                
                global.SpellCrystals = 10
                global.SpellManaCollected = 0
                global.MaxSpellMana = 300
                
                global.SpellcardType = "NonSpell"
                
                instance_activate_all()
                audio_resume_all()
                room_restart()
                instance_destroy()
            }
            if MO = 2
            {
                obj_CloudCurtains.GoBackTrans = true
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alpha and exiting menu
if Alpha = 1 //and !instance_exists(obj_ScoreSet)
{

}
else
{
    Alpha += 1/10
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Surface Recration
//If pause Surface is Deleted
if !surface_exists(Surface)
{
    Surface = surface_create(1024, 768)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Surface
draw_set_blend_mode_ext(bm_one, bm_zero)
draw_surface_part_ext(Surface, 0, 0, 1024, 768, 0, 0, 1, 1, c_white, 1)
draw_set_blend_mode(bm_normal)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///BaseMenu Drawing
//background
draw_sprite_ext(spr_Blackbacker, 1, 0, 0, 1, 1, 0, c_white, Alpha-0.3)

if !instance_exists(obj_ScoreSet){
//Menu
draw_sprite_ext(spr_PauseProp1, 1, PropX, 0, 1, 1, 0, c_white, 0.8)
if PropX &lt; 0
{
    PropX += 340/10
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>===== Menus =====</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu Draw
if !instance_exists(obj_ScoreSet){

SXP = 50  //Starting XPos for Text 
SYP = 200 //Starting YPos for Text
TS = 80 //The spread of the menu Options
for(var i = 0; i &lt; MenuMaximum; i++)
{
    if i = MO //currently selected option
    {
        draw_text_outline_coloured(SXP, SYP-10+(TS*i), string(PMenuOptions[i]), c_white, c_white, MCS, MCS, c_black, 1, ft_MenuOption, 1)
        draw_text_outline_coloured(SXP, SYP-10+35+(TS*i), string(PMenuOptionFlavour[i]), MCS, MCS, c_white, c_white, c_black, 1, ft_MenuTextSMDesc, 1)
    }
    else //Unselected Options
    {
        draw_text_outline_coloured(SXP, SYP+(TS*i), string(PMenuOptions[i]), c_gray, c_gray, MCUS, MCUS, c_black, 1, ft_MenuOption, 1)
    }
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GameOver draw
XP = 50
YP = 650
if MenuSet = "GameOver"
{
    draw_sprite_ext(spr_Creditcoin,0,XP+50,YP,1,1,0,c_white, 1)
    draw_set_halign(fa_middle)
    draw_set_valign(fa_middle) 
    draw_text_outline_coloured(XP+90,YP, "x " + string(global.Continues), c_white, c_white, MCS, MCS, c_black, 1, ft_MenuOption, 1)
    draw_set_halign(fa_left)
    draw_set_valign(fa_top) 
}       
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
