<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variable initialization
//grazebox
Grazer = instance_create(x, y, obj_Preenring)
Grazer.ID = id

//Player Sprite controls
DebugInvul = false
Stationary = true
Index = 0
HitboxAlpha = 0
HitboxSize = 0
HitboxColour = c_white
Rotation = 0

Sprite = spr_MidnightPlayer
image_speed = 0.1

//Player Movement variables
Focused = false
PlayerUnfocused = 5
PlayerFocused = 3

//Player variables
Invin = false
Bombing = false
Hit = false
DeathBombTimer = 10
Dead = false
DeadSwitch = false
RecoveryTime = 120

BarrierScale = 0
BarrierRot = 0
BarrierAlpha = 1
BarrierPhase = 0

direction = 90

InvunTimer = 60

AlphaFlicker = 0
AlphaChange = true

DeathSound = false

//Death Effect
DeathX = 0
DeathY = 0
DeadEffect = false
Radius = 0
Radius1 = 0

//Special
WalledInvar = 0

ACCircle = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug

/*if DebugInvul = true
{
    Invin = true
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rotation variables
//Hitbox
Rotation = Rotation mod 360
Rotation += 1*global.PlayerSpeed
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Hit Sound

if Hit = true
{
    if DeathSound = false
    {
        DeathSound = true
        
        Play_Sound_Fancy(snd_SFX_PlayerDeath,global.VolSFX)
        Play_Sound_Fancy(snd_SFX_PlayerBird,global.VolSFX)
    }
}
else
{
    DeathSound = false
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Hit
if Hit = true
{
        global.SpellCaptured = false
        
        if global.DreamBoarderActivate = false
        {
            Invin = true
            PlayerUnfocused = 0
            PlayerFocused = 0
       
            if DeathBombTimer &lt; 20
            {
                if keyboard_check(ord("X"))
                {
                    PlayerUnfocused = 5
                    PlayerFocused = 3
                    Hit = false
                    DeathBombTimer = 0
                }
                else
                {
                    DeathBombTimer += 1
                }
            }
            else
            {
                Dead = true
                if DeadSwitch = false
                {
                    
                    DeadEffect = true
                    DeathX = x
                    DeathY = y
                    InvunTimer = 360
                    script_execute(scr_PlayerDead)
                    DeathBombTimer = 0
                    DeadSwitch = true
                }
            }
        }
        else
        {
            basic_bullet_burst(obj_ClearCloud, 30, random(360), 0, x, y, 8, false, 360)
            basic_bullet_burst(obj_ClearCloud, 20, random(360), 0, x, y, 6, false, 360)
            basic_bullet_burst(obj_ClearCloud, 10, random(360), 0, x, y, 4, false, 360)
            
            global.DreamBoarderActivate = false
            global.DreamBoarderPoint = 0
            InvunTimer = 120
            Hit = false
        }
}

    if InvunTimer &gt; 0
    {
        InvunTimer -= 1
    }
    else
    {
       Invin = false
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
player_movement(PlayerUnfocused, PlayerFocused)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy Hitboxes
var 
Bullet = collision_point(x, y, obj_ParDanmaku, true, false)
Laser = collision_point(x, y, obj_ParLaser, true, false)
EnemyOrb = collision_point(x, y, obj_ParEnemyOrbs, true, false)
Enemy = collision_point(x, y, obj_ParEnemyLocust, true, false)
Boss = collision_point(x, y, obj_ParBoss, true, false);

if Boss != noone
{
    if instance_exists(obj_ParBoss)
    {
        if !instance_exists(obj_ParDialog)
        {
            if obj_ParBoss.Harmless = false
            {
                if Invin = false //and DebugInvul = false
                {
                    Hit = true
                    Invin = true
                }
            }
        }
    }
    else
    {
        if !instance_exists(obj_ParDialog)
        {
            if Invin = false //and DebugInvul = false
            {
                Hit = true
                Invin = true
            }
        }
    }
}

if EnemyOrb != noone
{
    if !instance_exists(obj_ParDialog)
    {
        if Invin = false //and DebugInvul = false
        {
            Hit = true
            Invin = true
        }
    }
}

if Enemy != noone
{
    if !instance_exists(obj_ParDialog)
    {
        if Invin = false //and DebugInvul = false
        {
            Hit = true
            Invin = true
        }
    }
} 
        
if Bullet != noone
{
    if !instance_exists(obj_ParDialog)
    {
        if Invin = false //and DebugInvul = false
        {
            if Bullet.Deadly = true
            {
                Hit = true
                Invin = true
            }
        }
    }
    
    with Bullet
    {
        if BombResistence = false
        {
            AttackKilled = true
            BulletKilled = true
            instance_destroy()
        }
    }
}

if Laser != noone
{
    if !instance_exists(obj_ParDialog)
    {
        if Invin = false //and DebugInvul = false
        {
            if Laser.Deadly = true
            {
                Hit = true
                Invin = true
            }
        }
    }
    
    with Laser
    {
        if BombResistence = false
        {
            AttackKilled = true
            BulletKilled = true
            instance_destroy()
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Dead Effect
if DeadEffect = true
{
    draw_set_blend_mode_ext(bm_inv_dest_color,bm_inv_src_color)
    draw_set_colour(c_white)
    draw_circle(DeathX, DeathY, Radius, 0)
    draw_circle(DeathX, DeathY, Radius - 100, 0)
    draw_circle(DeathX, DeathY, Radius - 150, 0)
    draw_circle(DeathX, DeathY, Radius - 175, 0)
    draw_set_blend_mode(bm_normal)

    Radius += 13
    Radius1 += 13
    if Radius = 1300
    {
        DeadEffect = false
    }
}
else
{
    Radius = 0
    Radius1 = 0
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Dead

if Dead = true
{
   if Focused = true
   {
        Focused = false
        image_alpha = 1
   }
   
   image_alpha -= 1/30
   image_xscale -= 1/30
   
   if image_alpha &lt;= 0
   {
      x = 512
      y = 680
      PlayerUnfocused = 5
      PlayerFocused = 3
      Hit = false
      DeadSwitch = false
      Dead = false
   }
}

if Dead = false
   {
        if Focused = false
        {
            if image_alpha &lt; 1
            {
                image_alpha += 0.03
            }
        }
        
        if Focused = true
        {
            if image_alpha &gt; 0.3
            {
                image_alpha -= 0.03
            }
            else
            {
                image_alpha += 0.03
            }
        }
      image_xscale = 1
   }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Focus Banner

//Draw Hitbox banner
draw_sprite_ext(spr_Circle, 1, x, y, HitboxSize, HitboxSize, Rotation, c_white, HitboxAlpha - 0.6)
draw_sprite_ext(spr_Circle, 1, x, y, HitboxSize - 0.3, HitboxSize - 0.3, -Rotation, c_white, HitboxAlpha - 0.6)

draw_circle_colour(x, y, ACCircle, c_black, c_black, 1)

if Hit = true
{
    HitboxColour = c_red
}
else
{
    HitboxColour = c_white
}

//Hitbox code
if Focused = false
{
    if ACCircle &gt; 0
    {
        ACCircle -= 120/30
    }
    
    if HitboxAlpha &gt; 0
    {
        HitboxAlpha -= 0.1*global.PlayerSpeed
        HitboxSize -= 0.1*global.PlayerSpeed
    }
}
else
{
    if ACCircle &gt; 0
    {
        ACCircle += 120/30
    }
    
    if HitboxAlpha &lt; 1
    {
        HitboxAlpha += 0.1*global.PlayerSpeed
        HitboxSize += 0.1*global.PlayerSpeed
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Sprite draw

//Draw Player Sprite
draw_sprite_ext(Sprite, Index, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha)
Index += image_speed*global.PlayerSpeed

if Invin = true and Dead = false
{
    AlphaFlicker += 1
    AlphaFlicker = AlphaFlicker % 5
    
    if AlphaFlicker = 0
    {
        AlphaChange =! AlphaChange
    }
    
    if AlphaChange = true
    {
        image_blend = c_white
    }
    else
    {
        image_blend = c_blue
    }
}
else
{
    AlphaFlicker = 0
    AlphaChange = true
    image_blend = c_white
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hitbox Draw1
/*if instance_exists (obj_Preenring)
{
    with(obj_Preenring)
    {
        draw_sprite_ext(spr_Hitbox, 0, x, y, ID.HitboxSize - 0.2, ID.HitboxSize - 0.2, ID.Rotation, c_white, ID.HitboxAlpha - 0.3)
        draw_sprite_ext(spr_Hitbox, 0, x, y, ID.HitboxSize - 0.2, ID.HitboxSize - 0.2, -ID.Rotation, c_white, ID.HitboxAlpha - 0.3)
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug
if instance_exists(obj_Debug)
{
    if obj_Debug.CollisionShow = true
    {
        draw_rectangle_colour(bbox_left, bbox_top, bbox_right, bbox_bottom, c_red, c_red, c_red, c_red, true)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
