<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-30</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Music Tracks
TrackNo = 0
CurrentTrack = 0

MusicReset = true
localvol = 1
SoundSilenced = false
MusicChange = false
StartingVol = global.VolBGM

MusicPaused = false 
MPTimer = 0
PauseMusic = 0
PauseStart = 0
PauseEnd = 120

Track[0] = Music_TitleTheme //Main Menu theme
Start[0] = 6.68 //Main Menu Start Loop
Finish[0] = 135 // Main Menu Finish Loop

Track[1] = Music_Stage1 //Stage 1 theme
Start[1] = 7 //Stage 1 Start Loop
Finish[1] = 89.87 //Stage 1 Finish Loop

Track[2] = Music_AlexTheme //Alex's theme
Start[2] = 16.5 //Alex's theme Start Loop
Finish[2] = 96 //Alex's theme Finish Loop

Track[3] = Music_MiddyTheme //Middy's theme
Start[3] = 25.62 //Middy's theme Start Loop
Finish[3] = 115 //Middy's theme Finish Loop

Track[4] = Music_Stage2 //Stage 2 theme
Start[4] = 13.71 //Stage 2 Start Loop
Finish[4] = 144 //Stage 2 Finish Loop

Debug = false
DebugInc = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Track Looper
if MusicReset = true
{
    audio_stop_sound(CurrentTrack)
    
    if MusicPaused = true //MPTimer
    {
        if MPTimer &lt; 60 
        {
            MPTimer +=1
        }
        else
        {
            CurrentTrack = audio_play_sound(Track[TrackNo], 0, 0)
            audio_sound_set_track_position(CurrentTrack , 0)
            MusicPaused = true
            MPTimer = 0
            MusicReset = false
        }
    }
    else
    {
        CurrentTrack = audio_play_sound(Track[TrackNo], 0, 0)
        audio_sound_set_track_position(CurrentTrack , 0)
        MusicReset = false
    }
}


if SoundSilenced = true
{
    audio_sound_gain(CurrentTrack , localvol, 0)
    if localvol &gt; 0
    {
        localvol -= global.VolBGM/60
    }
}
else
{
    audio_sound_gain(CurrentTrack , global.VolBGM, 0)
    localvol = global.VolBGM
}

pos = audio_sound_get_track_position(CurrentTrack);
End = Finish[TrackNo];
start = Start[TrackNo];
range = End - start;

if (pos &gt;= End)
{
    audio_sound_set_track_position(CurrentTrack, pos - range);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*DebugInc = pos

draw_text_outline(20, 10,"Current Pos:#" + string(DebugInc) ,c_white, c_black, 1, ft_SmallPreenValue, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
