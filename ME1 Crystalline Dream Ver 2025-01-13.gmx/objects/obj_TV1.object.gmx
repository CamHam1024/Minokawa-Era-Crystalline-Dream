<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_TVframe</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_ParEnemyOrbs</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy Status variables
event_inherited()

EnemyHP = 100
ScoreGiven = 5000
Type = 0

//Colour
Red = 100
Green = 100
Blue = 100
Colour = make_colour_rgb(Red, Green, Blue)

image_speed = 0
image_index = 2
image_xscale = 1
image_yscale = image_xscale
Rotation = 0
attack = 0 //this is for the slash and damage effects
DeathEffectSize = 1.5

//Movement Settings
CenterX = x
CenterY = y
Radius = 0
SpinSpeed = random(360)
MovementTimer = 0 
YIncriment = 0

xcord = x
ycord = y
Speed = 10

//Sigil Settings
Scale = 0
MaxScale = 1
MinScale = 0.6
ScaleSwitch = false

Spin = 0

StartWabble = false

//Pickups
//Mana
//Small
SmallMana = 0
//Large
LargeMana = 0

//Life
//Dream
SmallLife = 0
//Large
LargeLife = 0

//Score
ScorePeice = 0

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Effect Particles
EffectEmitter = 0
PiN = false //Point in direction
EffDir = 0
frameshift = 0

//TV Behavious Variables
Deathtrigger = false //A switch for when the TV Dies

TVAlpha = 0
TVAlphaHidden = 0.05
TVFrame = 0 //Animation screen status
TVFrameHidden = 4 //HiddenAnimation Screen Status
TVAnim = 0 //TV Animationframes
TVRot = 0

Sin = random(360)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Effect Variables
EffectScale = 0.5
LociSpin = 0
LociIndex = 0
//effect 1
NoEffect = 5
Efval = 0
repeat(NoEffect)
{
    SpriteSpinRate[Efval] = random_range(1,3)
    SpriteSpin[Efval] = 0
    OrbitDir[Efval] = random(360)
    Maxxrad[Efval] = random_range(5,40)
    Maxyrad[Efval] = random_range(1,10)
    xrad[Efval] = 0
    yrad[Efval] = 0
    
    Efval += 1
}
Efval = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy Attack variables
imgalpha = 0
Fire = 0

TVLife = 1000

//Other vars
Host = 0
MovToHost = false
MTHSwitch = true

TVPos = 0

TVTimeout = false
TVTimer = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy Death

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death shots
shotnum = 25
basic_bullet_burst(obj_StageTVBullet, shotnum , -90, 25, x, y, 3, 0 , 360)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy Effects
/*EffectEmitter += 1
EffectEmitter = EffectEmitter mod 5
if EffectEmitter = 0
{
    effect = instance_create(x + lengthdir_x(random(8), random(360)), y + lengthdir_y(random(8), random(360)), obj_WispFire)
    effect.image_blend = make_colour_rgb(Red, Green, Blue)
    
    effect = instance_create(x + lengthdir_x(random(8), random(360)), y + lengthdir_y(random(8), random(360)), obj_WispFire)
    effect.image_blend = make_colour_rgb(Red, Green, Blue)
   
     effect = instance_create(x + lengthdir_x(random(8), random(360)), y + lengthdir_y(random(8), random(360)), obj_WispFire)
     effect.image_blend = make_colour_rgb(Red, Green, Blue)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Customizeables</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Base stuff
if EnemyHP &lt;= 0 //Only Change Mask when enemy is alive obj_StageTVBullet
{
    if Deathtrigger = false
    {
        mask_index = spr_TVScreen
        depth = 1
        TVFrame = 8 //Animation screen status
        TVFrameHidden = 8 //HiddenAnimation Screen Status
        TVAlphaHidden = 1
        
        //Effect
        //Burst wave
        Effect = instance_create(x, y, obj_EnemyBurstEffect)
        Effect.R = Red
        Effect.G = Green
        Effect.B = Blue
        Effect.image_xscale = DeathEffectSize
        Effect.image_yscale = DeathEffectSize
        
        //Particles
        NumberOfEffect = 30
        repeat (NumberOfEffect)
        {
           Effect = instance_create(x, y, obj_fragment)
           Effect.speed = random_range(1, 5)
           Effect.direction= random(360)
        }
        
        //Sounds 
        Play_Sound_Fancy(snd_SFX_EnemyDead,global.VolSFX)

        Deathtrigger = true
        
        //Info transfer to Host
        if instance_exists(Host)
        {
            with (Host)
            {
                TVKilled += 1
            }
        }
    }
}

//easter egg active
if MovToHost = true
{
    if MTHSwitch = true
    {
        TVPos = distance_to_point(Host.x, Host.y)
        MTHSwitch = false
    }
    
    move_towards_point(Host.x, Host.y, TVPos/200)
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
//Base Movement

//Custom Movement
if EnemyHP &gt; 0 //Only Change Mask when enemy is alive
{
    if TVTimer &lt; TVLife
    {
        TVTimer += 1
    }
    else
    {
        TVTimeout = true
    }
}
else
{
    TVTimeout = false
}

if TVTimeout = true
{
    if TVAlpha &gt; 0
    {   
        TVAlpha -= 1/60
    }
        
    if TVAlphaHidden &gt; 0
    {
        TVAlphaHidden -= 1/60
    }
    else
    {
        instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack
if instance_exists(obj_ParPlayer)
{
    if point_distance(x, y, obj_ParPlayer.x, obj_ParPlayer.y) &gt; 150
    {
        if EnemyHP &lt;= 0
        {
            Fire += 1
            Fire = Fire % 60
            if Fire = 1
            {
                advanced_bullet_burst(obj_StageTVBullet, x, y, 0, 1, 1, 10, 10, random(360), 360)
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw effects

TVAnim = TVAnim mod 3
TVAnim += 0.4

TVRot = sine_wave(Sin+current_time/1000, 10, 10, 0)

if instance_exists(obj_ParPlayer)
{
    draw_sprite_ext(spr_TVframe, 0, x, y, 1, 1, TVRot, c_white, TVAlpha)
    draw_sprite_ext(spr_TVScreen, TVFrame + TVAnim, x, y, 1, 1, TVRot, c_white, TVAlpha)  
    
    if TVAlpha = 1
    {
        mask_index = spr_TVframe
    }
    else
    {
        mask_index = spr_TVScreen //this mask has no hitbox
    }
    
    if TVTimeout = false
    {
        if point_distance(x, y, obj_ParPlayer.x, obj_ParPlayer.y) &lt; 100
        {
            if EnemyHP &gt; 0 //Only Change Mask when enemy is alive
            {
                if TVAlpha &lt; 1
                {
                    TVAlpha += 1/10
                } 
            }
            else
            {
                if TVAlpha &gt; 0
                {
                    TVAlpha -= 1/10
                } 
            }
        }
        else
        {
            if TVAlpha &gt; 0
            {
                TVAlpha -= 1/10
            } 
        }
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text_outline(x, y, TVPos, c_white, c_black, 2, ft_PipedreamValues, 1) 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
