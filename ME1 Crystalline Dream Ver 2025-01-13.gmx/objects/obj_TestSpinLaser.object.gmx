<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_LaserTop</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_ParDanmaku</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Basic variables
//Colour Init
Red = 255
Green = 25
Blue = 255

//Destroy conditions
//[Resistences]
BombResistence = true //does Bombs effect the bullet?
OffScreenKill = false //Destroys the bullet when its oiff the screen

//[Kill variables]
Kill = false //setting true will Kill the bullet

//[Give Score When killed]
ScoreEnabled = false
Preened = false
PreenRad = abs(bbox_right - bbox_left) / 2 + 8

//Sprite variables
//[General]
image_alpha = 1
Created = false
image_speed = 0
direction = 90
image_angle = direction - 90
image_xscale = 0.2
image_yscale = 0
SpriteSize = 100
Deadly = false
ScoreGiven = false
KillSound = true
Laser = true

//[Animation]
SpriteAnimated = false
SpriteBlendModed = true
BlendModeType = bm_add
ImageIndex = 6
ImageFrame = 0

//[Direction]
PointInDirection = true
StartDirection = image_angle

//Effects
//[Enabled]
CreateEffect = true
DeathEffect = true

//[Effect variables (Create Effect)]
CreateEffectRot = random(360)
CreateX = x
CreateY = y
CreateScale = 1.5

//-=Colour Key=-
/* 
0, 0 = red  R: 251 G: 0 B: 0
1, 4 = orange R: 251 G: 126 B: 0
2, 8 = yellow R: 251 G: 251 B: 0
3, 12 = green R: 0 G: 251 B: 0
4, 16 = cyan R: 0 G: 251 B: 251
5, 20 = blue R: 0 G: 0 B: 251
6, 24 = purple R: 251 G: 0 B: 251
7, 28 = white R: 251 G: 251 B: 251
*/






</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Properties
soundplayed[snd_SFX_Horn] = false
{
    SFX = snd_SFX_Horn
    audio_stop_sound(SFX)
    audio_play_sound(SFX, 0, 0)
    audio_sound_gain(SFX, global.VolSFX, 0)
}

startx = x
starty = y

DeploySound = false 
LaserKill = false

DeployTime = 60
KillTimer = 0
SpinDeduction = 0.1
SpinSpeed = SpinDeduction * DeployTime
StopSpeed = 0.5
Dis = 0
Dir = 0 

Type = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death Score
if ScoreEnabled = true
{
   instance_create(x, y, obj_Score)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Killers
//Spellcard Cleared
if global.SpellcardCleared = true or LaserKill = true
   {
   if image_xscale &gt; 0
        {
            image_xscale -= 0.05
        }else{
        instance_destroy()
        }
   }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Properties 
//Colours
if Type = 0
{
    Red = 255
    Green = 25
    Blue = 255
    ImageIndex = 6
}
else
{
    Red = 25
    Green = 255
    Blue = 255
    ImageIndex = 4
}
//Properites
if global.SpellcardCleared = false
{
    if SpinSpeed = StopSpeed
    {
    Deadly = true
        
    if DeploySound = false
    {
        soundplayed[snd_SFX_LaserDeploy01] = false
        {
            SFX = snd_SFX_LaserDeploy01
            audio_stop_sound(SFX)
            audio_play_sound(SFX, 0, 0)
            audio_sound_gain(SFX, global.VolSFX, 0)
        }
        DeploySound = true 
    }
    
    if image_xscale &lt; 1 and LaserKill = false
    {
        image_xscale += 0.05*1
        
        FunFeature = true
    }
    }
    else
    {
        SpinSpeed -= SpinDeduction
        if SpinSpeed &lt; StopSpeed
        {
            SpinSpeed = StopSpeed
        }
    }

    if LaserKill = true
    {
        Deadly = false
    }
}

if image_yscale &lt; 2
{
    image_yscale += 2/DeployTime 
}
//Kill
if KillTimer &lt; 100
{
    KillTimer += 1
}
else
{
    LaserKill = true
}
//Spin and attack
x = startx + lengthdir_x(Dis, Dir)
y = starty + lengthdir_y(Dis, Dir)

direction = Dir
image_angle = Dir + 90

if Type = 0
{
    Dir += SpinSpeed
}
else
{
    Dir -= SpinSpeed
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation
if SpriteBlendModed = false
   {
   draw_self()
   }else{
   draw_set_blend_mode(BlendModeType)
   draw_self()
   draw_set_blend_mode(bm_normal)
   }

if Created = false
   {
   if image_alpha &lt; 1
      {
      image_alpha += 0.1
      }else{
      Created = true
      }
   }

if SpriteAnimated = true
    {
    ImageFrame = ImageFrame mod 3
    ImageFrame += 0.25
    
    image_index = ImageIndex + ImageFrame
    }else{
    image_index = ImageIndex
    }

if PointInDirection = true
   {
   image_angle = direction -90
   }else{
   image_angle = StartDirection
   //image_angle = image_angle mod 360
   //image_angle += 1
   }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
