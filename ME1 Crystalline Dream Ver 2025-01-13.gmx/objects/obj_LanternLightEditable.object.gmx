<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spell Background Primative Init
scr_InitStage2Background()

//Editable variables
Host = obj_ParPlayer
RadSize = 10
 
//Shouldent change these
lightrot = 0

StarAngle = 0

ANGLE = 360

steps = 50

xx = 0
yy = 0

FadeTime = 10
WobbleSwitch = false
wobble = 0

VerAlpha = 1


radius = 0
minradius = 100

OneTimeSwitch = false
cloudDir = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//DEPTH

if global.SpellcardType = "Spellcard" or global.SpellcardType = "TimeOut"
{
    depth = 16
}
else
{
    depth = 14
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Wobble

if instance_exists(obj_ParPlayer)
{
    if WobbleSwitch = false
    {
        wobble += 0.1
    }
    else
    {
        wobble -= 0.1
    }

    if wobble &gt;= 3
    {
        WobbleSwitch = true
    }

    if wobble &lt;= 0
    {
        WobbleSwitch = false
    }
}
else
{
    WobbleSwitch = false
    
    if wobble &gt; 0
    {
        wobble -= 1
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Ring 1
RadiusAlter = 0
//=== Primative Init =======

if instance_exists(Host)
{
    xx = Host.x
    yy = Host.y
    
    if radius &lt;= RadSize
    {
        radius  += RadSize/FadeTime
    }
    
}
else
{
    x = xx
    y = yy
        
    if radius &gt;= 0
    {
        radius -= RadSize/FadeTime
    }
    else
    {
        instance_destroy()
    }
    
    minradius = 0
}
//Primative 
draw_primative_ring(xx, yy, 40, radius + wobble , 0, 360, global.S2Light, c_white, 1)

ShadDiff = 10
draw_primative_ring(xx, yy, 40, (radius + wobble)+ShadDiff ,(radius + wobble), 360, global.S2Light, c_white, 0.75)
draw_primative_ring(xx, yy, 40, (radius + wobble)+ShadDiff*2 ,(radius + wobble)+ShadDiff, 360, global.S2Light, c_white, 0.5)
draw_primative_ring(xx, yy, 40, (radius + wobble)+ShadDiff*3 ,(radius + wobble)+(ShadDiff*2), 360, global.S2Light, c_white, 0.25)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
