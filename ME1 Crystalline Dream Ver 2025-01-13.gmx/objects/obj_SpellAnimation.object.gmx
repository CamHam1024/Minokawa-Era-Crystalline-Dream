<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables Init
with(obj_GameHUD)
{
    WabbleDegrade = 0.1
    Wabfact = 7
    SpellNameReset = true
}

//sound = audio_play_sound(snd_SFX_SpellcardActivate, 0, 0)
//audio_sound_gain(sound, global.VolSFX, 0)

Play_Sound_Fancy(snd_SFX_SpellcardActivate,global.VolSFX/4)

//General
Cutin = spr_BlankCutin
Banner = spr_BlankCutin
BannerDisplay = true
CutinDisplay = true

//General Animation
FadeAway = false
SpellAlpha = 1
SpellYscale = 0

//Banners
//[Horisontal banner]
HBannerMovement = 0
HBanMoveInc = 0

//Text
//Boss Name
BossTextX = 0
TextAlpha1 = 0
TextAlpha2 = 1
TextSwitchOver = false
TextSwitchTimer = 0

//Cutin
CutinXMovement = 0
CutinYMovement = 0
CutinPhase = false
CutinMoveInc = 0
CutinAlpha = 0

//Backbanner
BackBannerAlpha = 0
Rot = 0

//New Variables
CutLength = 300
CutDir = -10
Cutspeed = 20
Phase = 0
image_xscale = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_GameHUD.SpellLineDisplay = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Background Shinanigens

draw_sprite_ext(spr_BackgroundBanner, 1, 192, 14, 1, 1, Rot, c_white, BackBannerAlpha)
draw_sprite_ext(spr_BackgroundBanner, 1, 192, 14, 0.8, 0.8, -Rot, c_white, BackBannerAlpha - 0.2)
draw_sprite_ext(spr_BackgroundBanner, 1, 192, 14, 0.6, 0.6, Rot, c_white, BackBannerAlpha - 0.4)
draw_sprite_ext(spr_BackgroundBanner, 1, 192, 14, 0.4, 0.4, -Rot, c_white, BackBannerAlpha - 0.6)
draw_sprite_ext(spr_BackgroundBanner, 1, 192, 14, 0.2, 0.2, Rot, c_white, BackBannerAlpha - 0.8)

Rot = Rot mod 360
Rot += 1

if FadeAway = false
{
    if BackBannerAlpha &lt; 1
    {
        BackBannerAlpha += 0.1
    }
}else{
    if BackBannerAlpha &gt; 0
    {
        BackBannerAlpha -= 0.1
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///[Verticel banner]
if CutinDisplay = true
{
draw_sprite_ext(Banner, 1, 612 + HBannerMovement, 386, 1, SpellYscale, 85, c_black, 1)
draw_sprite_ext(Banner, 1, 612 + HBannerMovement, 386, 1, SpellYscale, 85, c_white, 1)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cutin
draw_sprite_ext(Cutin, 1, CutinXMovement, CutinYMovement, image_xscale, 1, 0, c_white, CutinAlpha)

CutinXMovement = 1024/2 + lengthdir_x(CutLength, CutDir)
CutinYMovement = 768/2 + lengthdir_y(CutLength, CutDir)

if Phase = 0
{
    if image_xscale &lt; 1
    {
        image_xscale += 1/Cutspeed
    }
    
    if CutinAlpha &lt; 1
    {
        CutinAlpha += 1/Cutspeed
    }
    
    if CutLength &gt; 10
    {
        CutLength -= 290/Cutspeed
    }
    else
    {
        Phase = 1
    }
}

if Phase = 1
{
    if FadeAway = false
    {
        CutLength -= 1
    }
    else
    {
        CutLength -= 200/Cutspeed
        
        if image_xscale &gt; 0
        {
            image_xscale -= 1/Cutspeed
        }
    
        if CutinAlpha &gt; 0
        {
            CutinAlpha -= 1/Cutspeed
        }
        else
        {
            instance_destroy()
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///[Horisontal banner]

if BannerDisplay = true
{
draw_sprite_ext(Banner, 1, 512, 490 + HBannerMovement, 1, SpellYscale, 355, c_black, 1)
draw_sprite_ext(Banner, 1, 512, 486 + HBannerMovement, 1, SpellYscale, 355, c_white, 1)


if FadeAway = false
{
    if SpellYscale &lt; 1
    {
        SpellYscale += 0.05
    }   
    HBanMoveInc = 0.1
    HBannerMovement += HBanMoveInc
}else{
      if SpellYscale &gt; 0
      {
         SpellYscale -= 0.05
      }
      
      HBanMoveInc += 0.5
      HBannerMovement += HBanMoveInc 
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Text
//Spellcard Attack!
draw_text_outline_ext(212 , 436 + HBannerMovement, string(global.Spellcardname), c_white, c_black, 1, ft_SpellcardAttack, 1, 1, SpellYscale, 355)

if CutinDisplay = true
{
//Boss Name
draw_text_outline_ext(212 + HBannerMovement/2, 400 + HBannerMovement, string(global.BossName), c_white, c_black, 1, ft_BossName, 1, 1, SpellYscale, 355)
}


//Spellcard Name and Bonus
//SpellBonus Numbers
SpellBonus = string_repeat("0", 9 - string_length(string(floor(global.SpellBonus)))) + string(global.SpellBonus)
for (var i = string_length(SpellBonus) - 2; i &gt; 1; i -= 3)
{
    SpellBonus = string_insert(",", SpellBonus, i);
}

//SpellName
//draw_text_outline_ext(312 - HBannerMovement/2, 490 + HBannerMovement, string(global.Spellcardname), c_white, c_black, 1, ft_BossName, TextAlpha1, 1, SpellYscale, 355)   

//Spell Bonus
draw_text_outline_ext(312 - HBannerMovement/2, 490 + HBannerMovement, "Bonus Avalible: " + string(SpellBonus), c_white, c_black, 1, ft_BossName, TextAlpha2, 1, SpellYscale, 355)

if TextSwitchOver = false
{
    if TextAlpha1 &lt; 1
    {
    TextAlpha1 += 0.1
    }else{
    TextSwitchTimer += 1
    if TextSwitchTimer &gt;= 100
       {
       FadeAway = true
       }
    }
}
else
{
if TextAlpha1 &gt; 0
    {
    TextSwitchTimer = 0
    TextAlpha1 -= 0.1
    TextAlpha2 += 0.1
    }else{
    TextSwitchTimer += 1
    if TextSwitchTimer &gt;= 70
       {
       FadeAway = true
       }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
