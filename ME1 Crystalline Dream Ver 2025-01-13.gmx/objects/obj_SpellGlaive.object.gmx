<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite362</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_ParDanmaku</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Basic variables
event_inherited()

//Destroy conditions
//[Resistences]
BombResistence = true //does Bombs effect the bullet?
OffScreenKill = true //Destroys the bullet when its oiff the screen

//[Kill variables]
Kill = false //setting true will Kill the bullet

//[Give Score When killed]
ScoreEnabled = false
Preened = false
PreenRad = abs(bbox_right - bbox_left) / 2 + 8

//Sprite variables
//[General]
image_alpha = 0
image_angle = direction - 90
Created = false
image_speed = 0
ImgScale = 1.5
image_xscale = ImgScale
image_yscale = ImgScale
Boundry = 300
Deadly = true
ScoreGiven = false
KillSound = true
Laser = false

//[Animation]
SpriteAnimated = false
SpriteBlendModed = true
BlendModeType = bm_normal
ImageIndex = 13
ImageFrame = 0

//[Direction]
PointInDirection = false
StartDirection = 0

//Effects
//[Enabled]
CreateEffect = true
DeathEffect = true

//[Effect variables (Create Effect)]
CreateEffectRot = random(360)
CreateX = x
CreateY = y
CreateScale = 1
EffectRot = 0

//Effects
scr_EffectColour()

//-=Colour Key=-
/* 
0, 0 = Red  R: 251 G: 0 B: 0
1, 4 = Orange R: 251 G: 126 B: 0
2, 8 = Yellow R: 251 G: 251 B: 0
3, 12 = yelleen R: 0 G: 251 B: 0
4, 16 = Green R: 0 G: 251 B: 0
5, 20 = gran R: 0 G: 251 B: 0
6, 24 = Cyan R: 0 G: 251 B: 251
7, 28 = Lt Blue R: 50 G: 50 B: 251
8, 32 = Blue R: 0 G: 0 B: 251
9, 36 = Purple R: 200 G: 0 B: 200
10, 40 = Magenta R: 251 G: 0 B: 251
11, 44 = Velvet R: 251 G: 0 B: 251
12, 48 = White R: 251 G: 251 B: 251
13, 52 = Black R: 251 G: 251 B: 251
*/






</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Properties
TimerTest = 0
BTO = 0

KillBounce = false

AttackPhase = false
Rotate = 0
Spin = 0
Dir = 0

ES = 0
Fire = 0

BounceBuffer = false
BufferTime = 0

HSStore = hspeed
VSStore = vspeed

SecAttack = true

if global.Diff = "Easy"
{
    speed = 10
    BulletNumber = 0
}

if global.Diff = "Normal"
{
    speed = 10
    BulletNumber = 0
}

if global.Diff = "Hard"
{
    speed = 10
    BulletNumber = 10
}

if global.Diff = "Flightless"
{
    speed = 10
    BulletNumber = 10
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Properties
//Killers
event_inherited()

//Events
//Movement and Bounce
if KillBounce == false
{
    //X position
    if x &lt; 190
    {
        WaitTime = 1
        if (BufferTime &lt; WaitTime)
        {
            if BufferTime == 0
            {
                HSStore = -hspeed
                VSStore = vspeed
                Warn = instance_create(x, y, obj_ShouWarningLaserEmit)
                Warn.Dir = point_direction(0, 0, HSStore, VSStore)
            }
            
            speed = 0
            BufferTime += 1
        }
        else
        {
            x = 200
            Rotate = !Rotate 
            hspeed = HSStore
            vspeed = VSStore
            
            BufferTime = 0
        }
        
    }
    
    if x &gt; 1024-190
    {
        WaitTime = 1
        if (BufferTime &lt; WaitTime)
        {
            if BufferTime == 0
            {
                HSStore = -hspeed
                VSStore = vspeed
                Warn = instance_create(x, y, obj_ShouWarningLaserEmit)
                Warn.Dir = point_direction(0, 0, HSStore, VSStore)
            }
            
            speed = 0
            BufferTime += 1
        }
        else
        {
            x = 824
            Rotate = !Rotate 
            hspeed = HSStore
            vspeed = VSStore
            
            BufferTime = 0
        }
        
        if SecAttack == true
        {
            basic_bullet_burst(obj_GlaiveShot1, BulletNumber, (360/BulletNumber)/2, 10, x, y, 1, 0, 360)
            basic_bullet_burst(obj_GlaiveShot1, BulletNumber, 0, 10, x, y, 2, 0, 360)
            SecAttack = false
        }
    }
    
    //Y Position 
    if y &gt; 768+14
    {
        WaitTime = 1
        if (BufferTime &lt; WaitTime)
        {
            if BufferTime == 0
            {
                HSStore = hspeed
                VSStore = -vspeed
                Warn = instance_create(x, y, obj_ShouWarningLaserEmit)
                Warn.Dir = point_direction(0, 0, HSStore, VSStore)
            }
            
            speed = 0
            BufferTime += 1
        }
        else
        {
            y = 768-15
            Rotate = !Rotate 
            hspeed = HSStore
            vspeed = VSStore
            
            BufferTime = 0
        }
    }
    
    if y &lt; 14                                                                                                       
    {
        WaitTime = 1
        if (BufferTime &lt; WaitTime)
        {
            if BufferTime == 0
            {
                HSStore = hspeed
                VSStore = -vspeed
                Warn = instance_create(x, y, obj_ShouWarningLaserEmit)
                Warn.Dir = point_direction(0, 0, HSStore, VSStore)
            }
            
            speed = 0
            BufferTime += 1
        }
        else
        {
            y = 15
            Rotate = !Rotate 
            hspeed = HSStore
            vspeed = VSStore
            
            BufferTime = 0
        }
    }
}

/*if AttackPhase = false
{
    speed = 0.5
    direction = -90
    AttackPhase = true
}*/




//Trail
if AttackPhase == false
{
    ES += 1
    ES = ES % 3
    if ES = 1
    {
        Effect = instance_create( x, y, obj_FakeGlaive)
        Effect.image_index = image_index
        Effect.image_xscale = image_xscale
        Effect.image_yscale = image_yscale
        Effect.image_angle = image_angle
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inherited
event_inherited()
//draw_text_outline(200, 200, string(TimerTest), c_white, c_black, 2, ft_YuTextSM, 1 )
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation and effect
//Effects
scr_EffectColour()

if CreateEffect = true
{

    CreateEff = instance_create(x, y, obj_Creationeffect)
    CreateEff.image_xscale = CreateScale
    CreateEff.image_yscale = CreateScale
    CreateEff.image_angle = direction
    CreateEff.Red = Red
    CreateEff.Green = Green
    CreateEff.Blue = Blue
    CreateEffect = false
    
    /*draw_set_blend_mode(bm_add)
    draw_sprite_ext(spr_ExplosionEffect, 0, CreateX, CreateY, CreateScale, CreateScale, EffectRot, EffectColour, 0.8)
    draw_set_blend_mode(bm_normal)
    
    EffectRot = EffectRot mod 360
    EffectRot += 10

    if CreateScale &gt; 0
    {
        CreateScale -= 0.05
    }
    else
    {
        CreateEffect = false
    }*/
}

//Animation
if Created = false
   {
   if image_alpha &lt; 1
      {
      image_alpha += 1/5
      }else{
      Created = true
      }
   }

if SpriteAnimated = true
    {
    ImageFrame = ImageFrame mod 3
    ImageFrame += 0.10
    
    image_index = ImageIndex + ImageFrame
    }else{
    image_index = ImageIndex
    }
    
if PointInDirection = true
{
   image_angle = direction -90
}
else
{
    image_angle = Spin
    Spin = Spin mod 360
    
   if Rotate = 0
   {
        image_xscale = -ImgScale
        Spin += 15
        //image_yscale = 1
   }
   else
   {
        image_xscale = ImgScale
        Spin -= 15
        //image_yscale = -1
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
