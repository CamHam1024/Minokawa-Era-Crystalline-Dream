<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
scr_InitGinkeiBackground()

SpellBack = surface_create(1024, 768)

spin = 0

image_speed = 0

StarAngle = 90
ANGLE = 360
steps = 100

xx = x
yy = y

CenterX = 1024/2
CenterY = 768/2

SpinAngle = 0
SpinLength = 100

SpinSpeed = 0.1
radius = 0
maxRad = 100
minradius = 0 //Must be less then radius


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Extra code
scr_InitLilliBackground()
SpellBackground = scr_LilliBackground
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if radius &lt; maxRad
{
    radius += maxRad/60
}

SpinAngle += SpinSpeed
SpinAngle = SpinAngle % 360

xx = CenterX + lengthdir_x(SpinLength,SpinAngle)
yy = CenterY + lengthdir_y(SpinLength,SpinAngle)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Surfaces
if !surface_exists(SpellBack)
{
  SpellBack = surface_create(1024, 768)
}

surface_set_target(SpellBack) 
//===Draw sprites go here===

script_execute(scr_GinkeiBackground)

//==========================
surface_reset_target()
draw_set_colour(c_white)


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Primatives

//Init
var i
RadiusAlter = 0

TexStartx = (xx-radius)/room_width //surface_get_width(global.backside)
TexStarty = (yy-radius)/room_height //surface_get_height(global.backside)

TexEndx = (xx+radius)/room_width
TexEndy = (yy+radius)/room_height

//Primative 
TEX = surface_get_texture(SpellBack)

draw_primitive_begin_texture(pr_trianglestrip, TEX)

draw_enable_alphablend(false)
xAlt = xx + lengthdir_x(minradius, ANGLE * 0 / steps + StarAngle)
yAlt = yy + lengthdir_y(minradius, ANGLE * 0 / steps + StarAngle)

draw_vertex_texture(xx + lengthdir_x(minradius, StarAngle), yy + lengthdir_y(minradius, StarAngle), xAlt/room_width, yAlt/room_height)

for(i = 0; i &lt;= steps; i += 1)
{
    //draw_vertex(xx + lengthdir_x(radius, ANGLE  * i / steps), yy + lengthdir_y(radius, ANGLE  * i / steps))
    
    if RadiusAlter = 0
    {
        xAlt = xx + lengthdir_x(radius, ANGLE * i / steps + StarAngle)
        yAlt = yy + lengthdir_y(radius, ANGLE * i / steps + StarAngle)
    }
    else
    {
        xAlt = xx + lengthdir_x(minradius, ANGLE * i / steps + StarAngle)
        yAlt = yy + lengthdir_y(minradius, ANGLE * i / steps + StarAngle)
    }
    
    draw_vertex_texture(xAlt, yAlt, xAlt/room_width, yAlt/room_height)
    RadiusAlter =! RadiusAlter
}

xAlt = xx + lengthdir_x(minradius, ANGLE * i / steps + StarAngle)
yAlt = yy + lengthdir_y(minradius, ANGLE * i / steps + StarAngle)
draw_vertex_texture(xAlt, yAlt, xAlt/room_width, yAlt/room_height)
xAlt = xx + lengthdir_x(radius, ANGLE * i / steps + StarAngle)
yAlt = yy + lengthdir_y(radius, ANGLE * i / steps + StarAngle)
draw_vertex_texture(xAlt, yAlt, xAlt/room_width, yAlt/room_height)

draw_primitive_end()
draw_enable_alphablend(true)






</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
